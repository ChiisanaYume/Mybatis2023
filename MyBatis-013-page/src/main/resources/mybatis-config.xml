<?xml version="1.0" encoding="UTF-8" ?>

<!--根标签 一个xml文件只有一个根标签 mybatis 配置文件的根标签是 configuration-->
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!-- properties标签用于定义和配置属性（properties）-->
    <!-- 这些属性可以在整个配置文件中中引用和使用，包括映射文件（Mapper XML）-->
    <!-- properties标签可以写多个-->

    <!-- 从类路径的database.properties加载配置-->
    <properties>
        <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/genshin"/>
        <property name="username" value="root"/>
        <property name="password" value="333"/>
        <property name="pojo" value="com.faintdream.mybatis.pojo"/>
    </properties>


    <!-- typeAliases 配置类型别名-->
    <typeAliases>
        <typeAlias alias="GenshinRole" type="${pojo}.GenshinRole" />
    </typeAliases>

    <!--mybatis分页拦截器-->
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor"/>
    </plugins>

    <!--配置(数据库)环境-->
    <!--default属性表示默认使用的环境-->
    <!--在使用Mybatis创建SqlSessionFactory对象的时候,没有指定环境的话，默认使用的环境-->
    <environments default="development">

        <!--其中一个(数据库)环境,连接的数据库是faintdream-->
        <!--一般一个数据库对应一个环境(environment);一个个SqlSessionFactory对象-->
        <environment id="development">

            <!--事务管理器，有两个值 JDBC/MANAGED-->
            <transactionManager type="JDBC"/>

            <!--数据源(dataSource),为程序提供Connection对象-->
            <!--dataSource 有三个值 POOLED/UNPOOLED/JNDI-->
            <!-- POOLED 使用mybatis自己实现的连接池技术-->
            <!-- UNPOOLED 不使用连接池技术-->
            <!-- JNDI 使用集成第三方的连接池-->

            <dataSource type="POOLED">

                <!--driver JDBC驱动的java全限定类名-->
                <property name="driver" value="${driver}"/>

                <!--url 数据库 JDBC URL 地址-->
                <property name="url" value="${url}"/>

                <!--username 登录数据库用户名-->
                <property name="username" value="${username}"/>

                <!--password 登录数据库密码-->
                <property name="password" value="${password}"/>

                <!--POLLED 连接池配置-->

                <!--poolMaximumActiveConnections 最大连接数量 默认20-->
                <property name="poolMaximumActiveConnections" value="10"/>

                <!--poolMaximumIdleConnections 空闲连接数量-->
                <property name="poolMaximumIdleConnections" value="3"/>

                <!--poolMaximumCheckoutTime 强行让某个连接空闲，超时时间 默认20000毫秒-->
                <property name="poolMaximumCheckoutTime" value="10000"/>

                <!--如果获取连接花费了相当长的时间，连接池会打印状态日志并重新尝试获取一个连接（避免在误配置的情况下一直失败且不打印日志）-->
                <!--poolTimeToWait 每隔多少毫秒秒打印日志，并尝试获取连接对象 默认20000毫秒-->
                <property name="poolTimeToWait" value="5000"/>
            </dataSource>
        </environment>

    </environments>
    <mappers>
        <!--执行XxxMapper.xml文件的路径-->
        <!--resource属性会自动从类的根路径查找资源-->
        <mapper resource="GenshinRoleMapper.xml"/>
    </mappers>
</configuration>